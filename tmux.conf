##############################
# => BASIC SETTINGS
##############################

# Unbind default prefix and set it to Ctrl+a cause easier
unbind C-b
set -g prefix C-a
bind C-a send-prefix

# tmux display things in 256 colors
set -g default-terminal "tmux-256color"

set -g history-limit 100000
bind -n C-k clear-history

# Automatically renumber tmux windows
set -g renumber-windows on

# For nested tmux sessions
bind-key a send-prefix

# Activity Monitoring
setw -g monitor-activity off
set -g visual-activity off

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on
# set -g aggressive-resize off

# make delay shorter
set -sg escape-time 0

# tile all windows
unbind =
bind = select-layout tiled

# make window/pane index start with 1
set -g base-index 1
setw -g pane-base-index 1

# Don't rename my windows
set-option -g allow-rename off

# 12-hour clock mode
set-window-option -g clock-mode-style 12

##############################
# => KEY BINDINGS
##############################

# reload config file
bind r source-file ~/.tmux.conf \; display "Config Reloaded!"

# split window and fix path for tmux 1.9
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# synchronize all panes in a window
# no! why! i never _want_ to do this on purpose
# bind y setw synchronize-panes

# pane movement shortcuts
#bind h select-pane -L
#bind j select-pane -D
#bind k select-pane -U
#bind l select-pane -R



# WORKS WELL!
# bind -n C-H select-pane -L
# bind -n C-T select-pane -D
# bind -n C-N select-pane -U
# bind -n C-S select-pane -R

# < 2022
# Smart pane switching with awareness of vim splits
# vim-tmux-navigator
# is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
# bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
# bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
# bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
# bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
# bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
# bind -n C-H if-shell "$is_vim" "send-keys C-h" "select-pane -L"
# bind -n C-T if-shell "$is_vim" "send-keys C-j" "select-pane -D"
# bind -n C-N if-shell "$is_vim" "send-keys C-k" "select-pane -U"
# bind -n C-S if-shell "$is_vim" "send-keys C-l" "select-pane -R"


# > 2022
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-t' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-n' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-s' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-t' select-pane -D
bind-key -T copy-mode-vi 'C-n' select-pane -U
bind-key -T copy-mode-vi 'C-s' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l


# before vim-tmux-navigator
#bind d select-pane -L # was detach-client
#bind h select-pane -D # was select-pane -L
#bind t select-pane -U # was clock-mode
#bind n select-pane -R # was next-window

#bind D detach-client # was choose-client
#bind T clock-mode # unbound ?
#bind N next-window # unbound ?

# bind -r C-h select-window -t :-
# bind -r C-l select-window -t :+
# bind -r C-d select-window -t :-
# bind -r C-n select-window -t :+

# Resize pane shortcuts
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# enable mouse support for switching panes/windows
# NOTE: This breaks selecting/copying text on OSX
# To select text as expected, hold Option to disable it (iTerm2)
set -g mouse on


# maximizing and restoring windows
# nope. i like zoom better
# unbind Up
# bind Up new-window -d -n fullscreen \; swap-pane -s fullscreen.1 \; select-window -t fullscreen
# unbind Down
# bind Down last-window \; swap-pane -s fullscreen.1 \; kill-window -t fullscreen

# set vi mode for copy mode
# setw -g mode-keys vi
set-window-option -g mode-keys vi

# more settings to make copy-mode more vim-like
unbind [
bind Escape copy-mode
unbind p
# bind p paste-buffer
bind p run "tmux set-buffer \"$(xclip -o -selection clipboard)\"; tmux paste-buffer"

## OLD
# Setup 'v' to begin selection as in Vim
# bind-key -t vi-copy v begin-selection
# # bind-key -t vi-copy y copy-selection
# bind-key -t vi-copy y copy-pipe 'xclip -in -selection clipboard'

# # bind-key -t vi-copy r send-keys -X rectangle-toggle
# bind-key -t vi-copy r rectangle-toggle
## OLD

bind-key -T copy-mode-vi 'v' send-keys -X begin-selection
bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel 'xclip -in -selection clipboard'
bind-key -T copy-mode-vi 'r' send-keys -X rectangle-toggle

# i don't ever want to do this on purpose
# bind-key    -T prefix    C-z              suspend-client
unbind -T prefix C-z

# set -g status-right "♫ #{spotify_status} #{spotify_artist}: #{spotify_song} | %a %h-%d %H:%M "
set -g status-right "♫ #{spotify_status} | %a %h-%d %H:%M "
# %b %d %I:%M %p

##############################
# => PLUGINS
##############################
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sessionist'
set -g @plugin 'tmux-plugins/tmux-resurrect'
# set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'pwittchen/tmux-plugin-spotify'

# Initialize TMUX plugin manager
run '~/.tmux/plugins/tpm/tpm'

